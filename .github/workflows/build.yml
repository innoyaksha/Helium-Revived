name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*
jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4.0.0

      - name: Install Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: "24.0.1"

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        run: npm run dist
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Cleanup Artifacts for Windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "release/**/!(*.exe|*.zip|*.nsis. seventies)"
          mv release/**/Helium*.exe release/Helium-${{ github.ref_name }}-windows.exe
          mv release/**/Helium*.zip release/Helium-${{ github.ref_name }}-windows.zip
          mv release/**/Helium*.nsis.7z release/Helium-${{ github.ref_name }}-windows-portable.nsis.7z


      - name: Cleanup Artifacts for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          npx rimraf "release/**/!(*.AppImage|*.deb)"
          mv release/**/Helium*.AppImage release/Helium-${{ github.ref_name }}-linux.AppImage
          mv release/**/Helium*.deb release/Helium-${{ github.ref_name }}-linux.deb

      - name: Cleanup Artifacts for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "release/**/!(*.dmg|*.zip)"
          mv release/**/Helium*.dmg release/Helium-${{ github.ref_name }}-macos.dmg
          mv release/**/Helium*.zip release/Helium-${{ github.ref_name }}-macos.zip
          
      - name: upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: release
